{"version":3,"sources":["components/Table/TBody.jsx","components/Header/index.jsx","redux/actions/notes.js","components/Table/THead.jsx","components/Table/Table.jsx","components/Note/index.jsx","components/AddedNote/index.jsx","components/MainTable/index.jsx","components/ArchiveTable/index.jsx","components/SummaryTable/index.jsx","components/Content/index.jsx","App.js","redux/reducers/notes.js","redux/store.js","index.js"],"names":["TBody","props","children","Header","main","archive","dispatch","setOpen","open","className","onClick","payload","type","window","confirm","THead","id","colSpan","iconImg","activeAmount","archivedAmount","Table","bodyClassName","tableClassName","headProps","Note","img","name","creationDate","category","content","dates","archived","setEdit","style","display","alignItems","justifyContent","unArchive_item","archive_item","delete_item","AddedNote","note","setCreate","React","useRef","date","validateInputs","e","preventDefault","current","value","Date","now","edit_item","create_item","alert","ref","required","defaultValue","placeholder","form","maxLength","cols","rows","MainTable","notes","useState","edit","create","map","ArchiveTable","prev","SummaryTable","task","thought","idea","active","Content","useDispatch","useSelector","items","useEffect","App","images","imgName","imgUrl","initialState","filter","dateRegEx","findDates","split","str","replace","match","join","calculateActive","state","reduce","acc","calculateArchived","calculate","store","createStore","action","newNote","editNote","el","Object","assign","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.458062cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TBody = (props) => {\r\n  return <tbody {...props}>{props.children}</tbody>;\r\n};\r\n\r\nexport default TBody;\r\n","import React from 'react';\r\n\r\nimport { delete_all, archive_all, calculate } from '../../redux/actions/notes';\r\n\r\nconst Header = ({ main, archive, dispatch, setOpen, open }) => {\r\n  const deleteAll = () => {\r\n    if (window.confirm('Are you sure you want to archive all notes?')) {\r\n      dispatch(delete_all());\r\n      dispatch(calculate());\r\n    }\r\n  };\r\n  const archiveAll = () => {\r\n    dispatch(archive_all());\r\n    dispatch(calculate());\r\n  };\r\n\r\n  if (main) {\r\n    return (\r\n      <header className=\"header-list main\">\r\n        <span className=\"note-info\">Name</span>\r\n        <span className=\"note-date-created\">Created</span>\r\n        <span className=\"note-category\">Category</span>\r\n        <span className=\"note-text\">Content</span>\r\n        <span className=\"note-dates-aditional\">Dates</span>\r\n        <span>\r\n          <div className=\"note-header-icons\">\r\n            <i onClick={archiveAll} className=\"fas fa-archive\"></i>\r\n            <i onClick={deleteAll} className=\"fas fa-trash\"></i>\r\n          </div>\r\n        </span>\r\n      </header>\r\n    );\r\n  } else if (archive) {\r\n    return (\r\n      <header className=\"header-list main\">\r\n        <span className=\"note-info\">Name</span>\r\n        <span className=\"note-date-created\">Created</span>\r\n        <span className=\"note-category\">Category</span>\r\n        <span className=\"note-text\">Content</span>\r\n        <span className=\"note-dates-aditional\">Dates</span>\r\n        <span>\r\n          <button onClick={setOpen}> {open ? 'Close Archive' : 'See Archived'}</button>\r\n        </span>\r\n      </header>\r\n    );\r\n  } else {\r\n    return (\r\n      <header className=\"header-list\">\r\n        <span className=\"note-archived-category\">Category</span>\r\n        <span className=\"note-active\">Active</span>\r\n        <span className=\"note-archived\">Archived</span>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","export const delete_item = (id) => ({ type: 'DELETE_NOTE', id });\r\nexport const archive_item = (id) => ({ type: 'ARCHIVE_NOTE', id });\r\nexport const unArchive_item = (id) => ({ type: 'UNARCHIVE_NOTE', id });\r\nexport const create_item = (payload) => ({ type: 'CREATE_NOTE', payload });\r\nexport const edit_item = (payload) => ({ type: 'EDIT_NOTE', payload });\r\nexport const archive_all = (payload) => ({ type: 'ARCHIVE_ALL_NOTES', payload });\r\nexport const delete_all = (payload) => ({ type: 'DELETE_ALL_NOTES', payload });\r\n\r\nexport const calculate = () => ({ type: 'CALCULATE' });\r\n","import React from 'react';\r\n\r\nconst THead = (props) => {\r\n  return (\r\n    <thead onClick={props.onClick} className=\"head note-item btn\" id={`${props.id}`}>\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          <i className={`fas ${props.iconImg}`}></i>\r\n          {props.id}\r\n        </td>\r\n        <td colSpan=\"2\">\r\n          <span className={`active`}>{props.activeAmount || '-'}</span>\r\n        </td>\r\n        <td colSpan=\"1\">\r\n          <span className={`archived`}>{props.archivedAmount || '-'}</span>\r\n        </td>\r\n        <td colSpan=\"1\">\r\n          <i></i>\r\n        </td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default THead;\r\n","import React from 'react';\r\nimport { THead, TBody } from '..';\r\n\r\nconst Table = ({\r\n  main,\r\n  id,\r\n  iconImg,\r\n  activeAmount,\r\n  archivedAmount,\r\n  bodyClassName,\r\n  tableClassName,\r\n  children,\r\n  onClick,\r\n}) => {\r\n  const headProps = main || { id, iconImg, activeAmount, archivedAmount };\r\n  return (\r\n    <>\r\n      <table className={tableClassName || ' '}>\r\n        {main ? false : <THead onClick={onClick} {...headProps} />}\r\n        <TBody className={bodyClassName} id={id || ' '}>\r\n          {children}\r\n        </TBody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { delete_item, archive_item, unArchive_item } from '../../redux/actions/notes';\r\n\r\nconst Note = ({\r\n  id,\r\n  img,\r\n  name,\r\n  creationDate,\r\n  category,\r\n  content,\r\n  dates,\r\n  archived,\r\n  setEdit,\r\n  dispatch,\r\n}) => {\r\n  const deleteNote = () => {\r\n    dispatch(delete_item(id));\r\n  };\r\n  const archiveNote = () => {\r\n    dispatch(archive_item(id));\r\n  };\r\n  const unArchiveNote = () => {\r\n    return archived ? dispatch(unArchive_item(id)) : false;\r\n  };\r\n\r\n  return (\r\n    <tr className={`note-item ${id}`}>\r\n      <td className=\"note-info\">\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around' }}>\r\n          {img}\r\n          {name}\r\n        </div>\r\n      </td>\r\n      <td className=\"note-date-created\">{creationDate}</td>\r\n      <td className=\"note-category\">{category}</td>\r\n      <td className=\"note-text\">{content}</td>\r\n      <td className=\"note-dates-aditional\">{dates}</td>\r\n      <td>\r\n        {archived ? (\r\n          <button onClick={unArchiveNote} className=\"unArchive\">\r\n            Unarchive\r\n          </button>\r\n        ) : (\r\n          <div className=\"note-header-icons\">\r\n            <i onClick={() => setEdit(id)} className=\"fas fa-edit\"></i>\r\n            <i onClick={archiveNote} className=\"fas fa-archive\"></i>\r\n            <i onClick={deleteNote} className=\"fas fa-trash\"></i>\r\n          </div>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport { create_item, edit_item } from '../../redux/actions/notes';\r\n\r\nimport '../../App.css';\r\n\r\nconst AddedNote = ({ note, setCreate, setEdit, dispatch }) => {\r\n  const name = React.useRef(null);\r\n  const date = React.useRef(null);\r\n  const category = React.useRef(null);\r\n  const content = React.useRef(null);\r\n\r\n  const validateInputs = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      name.current.value !== '' &&\r\n      date.current.value !== '' &&\r\n      category.current.value !== '' &&\r\n      content.current.value !== ''\r\n    ) {\r\n      const payload = {\r\n        id: note?.id || Date.now(),\r\n        name: name.current.value,\r\n        date: date.current.value,\r\n        category: category.current.value,\r\n        content: content.current.value,\r\n      };\r\n\r\n      if (!note) {\r\n        dispatch(create_item(payload));\r\n        setCreate(false);\r\n      } else {\r\n        dispatch(edit_item(payload));\r\n        setEdit(false);\r\n      }\r\n    } else {\r\n      alert('Заполните все поля!!!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr className=\"note-item\" id=\"addedItem\">\r\n      <td className=\"add-note\" colSpan=\"6\">\r\n        <form id=\"add-form\">\r\n          <input\r\n            ref={name}\r\n            required\r\n            type=\"text\"\r\n            id=\"fname2\"\r\n            defaultValue={note?.name || ''}\r\n            name=\"Name\"\r\n            placeholder=\"Name\"\r\n            form=\"add-form\"\r\n          />\r\n          <input\r\n            ref={date}\r\n            required\r\n            type=\"date\"\r\n            id=\"fname1\"\r\n            defaultValue={note?.creationDate || ''}\r\n            name=\"Creation date\"\r\n          />\r\n          <select\r\n            ref={category}\r\n            defaultValue={note?.category || 'Task'}\r\n            name=\"Category\"\r\n            id=\"categorySelect\">\r\n            <option defaultValue=\"Task\">Task</option>\r\n            <option defaultValue=\"Random Thought\">Random Thought</option>\r\n            <option defaultValue=\"Idea\">Idea</option>\r\n          </select>\r\n          <textarea\r\n            ref={content}\r\n            required\r\n            name=\"Content\"\r\n            id=\"contentArea\"\r\n            defaultValue={note?.content || ''}\r\n            maxLength=\"150\"\r\n            cols=\"30\"\r\n            rows=\"2\"\r\n            placeholder=\"Content\"\r\n            form=\"add-form\"></textarea>\r\n          <div className=\"note-dates\">{note?.dates || ''}</div>\r\n          {!note ? (\r\n            <div>\r\n              <button onClick={(e) => validateInputs(e)} id=\"submitBtn\">\r\n                Add note\r\n              </button>\r\n              <button onClick={() => setCreate(false)} id=\"removeBtn\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <button onClick={(e) => validateInputs(e)} id=\"edit\">\r\n              Confirm\r\n            </button>\r\n          )}\r\n        </form>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AddedNote;\r\n","import React from 'react';\r\nimport { Header, Table, Note, AddedNote } from '..';\r\n\r\nimport '../../App.css';\r\n\r\nconst MainTable = ({ dispatch, notes }) => {\r\n  const [edit, setEdit] = React.useState(-1);\r\n  const [create, setCreate] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header main dispatch={dispatch} />\r\n      <Table main tableClassName=\"main-table\" bodyClassName=\"main-table-body\">\r\n        {notes.map((note) => {\r\n          if (!note.archived) {\r\n            if (note.id === edit) {\r\n              return <AddedNote note={note} setEdit={setEdit} dispatch={dispatch} />;\r\n            }\r\n            return <Note {...note} setEdit={setEdit} dispatch={dispatch} />;\r\n          }\r\n        })}\r\n        {create && <AddedNote setCreate={setCreate} dispatch={dispatch} />}\r\n      </Table>\r\n      <div className=\"note-create\">\r\n        <button onClick={() => setCreate(true)} className=\"button-create\">\r\n          Create Note\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTable;\r\n","import React from 'react';\r\n\r\nimport { Header, Table, Note } from '..';\r\n\r\nconst ArchiveTable = ({ notes, dispatch }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <Header archive open={open} setOpen={() => setOpen((prev) => !prev)} />\r\n      <Table main tableClassName=\"main-table\" bodyClassName=\"main-table-body\">\r\n        {open &&\r\n          notes.map((note) => {\r\n            if (note.archived) {\r\n              return <Note {...note} dispatch={dispatch} />;\r\n            }\r\n          })}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArchiveTable;\r\n","import React from 'react';\r\nimport { Header, Table } from '..';\r\n\r\nimport '../../App.css';\r\n\r\nconst SummaryTable = ({ task, thought, idea }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Table\r\n        id=\"Task\"\r\n        iconImg=\"fa-shopping-cart\"\r\n        activeAmount={task.active}\r\n        archivedAmount={task.archived}\r\n        bodyClassName=\"body archived-items\"></Table>\r\n      <Table\r\n        id=\"Random Thought\"\r\n        iconImg=\"fa-bookmark\"\r\n        activeAmount={thought.active}\r\n        archivedAmount={thought.archived}\r\n        bodyClassName=\"body archived-items\"></Table>\r\n      <Table\r\n        id=\"Idea\"\r\n        iconImg=\"fa-lightbulb\"\r\n        activeAmount={idea.active}\r\n        archivedAmount={idea.archived}\r\n        bodyClassName=\"body archived-items\"></Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SummaryTable;\r\n","import React from 'react';\r\nimport { MainTable, SummaryTable, ArchiveTable } from '../';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { calculate } from '../../redux/actions/notes';\r\n\r\nconst Content = () => {\r\n  const dispatch = useDispatch();\r\n  const { task, thought, idea, items } = useSelector(({ task, thought, idea, items }) => ({\r\n    task,\r\n    thought,\r\n    idea,\r\n    items,\r\n  }));\r\n\r\n  React.useEffect(() => {\r\n    dispatch(calculate());\r\n  }, [items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"notes-container\">\r\n          <MainTable dispatch={dispatch} notes={items} />\r\n          <SummaryTable task={task} thought={thought} idea={idea} />\r\n          <ArchiveTable dispatch={dispatch} notes={items} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport { Content } from './components';\n\nfunction App() {\n  return <Content />;\n}\n\nexport default App;\n","const images = [\r\n  {\r\n    imgName: 'Task',\r\n    imgUrl: <i className=\"fas fa-shopping-cart\"></i>,\r\n  },\r\n  {\r\n    imgName: 'Idea',\r\n    imgUrl: <i className=\"far fa-lightbulb\"></i>,\r\n  },\r\n  {\r\n    imgName: 'Random Thought',\r\n    imgUrl: <i className=\"fas fa-bookmark\"></i>,\r\n  },\r\n];\r\n\r\nconst initialState = {\r\n  items: [\r\n    {\r\n      id: 123,\r\n      img: images.filter((img) => img.imgName === 'Idea')[0]?.imgUrl || ' ',\r\n      name: 'dawcxz',\r\n      creationDate: 'April 20 2012',\r\n      category: 'Idea',\r\n      content: 'awdawdwawdadfa 3/5/2021',\r\n      dates: '',\r\n      archived: false,\r\n    },\r\n    {\r\n      id: 233,\r\n      img: images.filter((img) => img.imgName === 'Task')[0]?.imgUrl || ' ',\r\n      name: 'asdfasdf',\r\n      creationDate: '',\r\n      category: 'Task',\r\n      content: '',\r\n      dates: '',\r\n      archived: false,\r\n    },\r\n    {\r\n      id: 22,\r\n      img: '',\r\n      name: '',\r\n      creationDate: '',\r\n      category: 'Task',\r\n      content: '',\r\n      dates: '',\r\n      archived: false,\r\n    },\r\n  ],\r\n  task: {\r\n    active: 0,\r\n    archived: 0,\r\n  },\r\n  thought: {\r\n    active: 0,\r\n    archived: 0,\r\n  },\r\n  idea: {\r\n    active: 0,\r\n    archived: 0,\r\n  },\r\n};\r\n\r\nconst dateRegEx = /^(0?[1-9]|1[012])[ /](0?[1-9]|[12][0-9]|3[01])[ /](19|20)?[0-9]{2}$/; //3/5/2021, 11/5/2021, 2/1/1991\r\nconst findDates = (value) => {\r\n  let text = value.split(' ');\r\n  const dates = text.map((str) => str.replace(',', '')).filter((str) => str.match(dateRegEx));\r\n  return dates.join(', ');\r\n};\r\n\r\nconst calculateActive = (category, state) =>\r\n  state.items.reduce(\r\n    (acc, note) => (note.category === category && note.archived === false ? acc + 1 : acc),\r\n    0,\r\n  );\r\nconst calculateArchived = (category, state) =>\r\n  state.items.reduce(\r\n    (acc, note) => (note.category === category && note.archived === true ? acc + 1 : acc),\r\n    0,\r\n  );\r\n\r\nconst calculate = (category, state) => ({\r\n  active: calculateActive(category, state),\r\n  archived: calculateArchived(category, state),\r\n});\r\n\r\nexport const notes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_NOTE':\r\n      const { id, category, content, name, date } = action.payload;\r\n      const newNote = {\r\n        id: id,\r\n        name,\r\n        img: images.filter((img) => img.imgName === category)[0]?.imgUrl || ' ',\r\n        creationDate: date,\r\n        category,\r\n        content,\r\n        dates: findDates(content),\r\n        archived: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        items: [...state.items, newNote],\r\n      };\r\n    case 'EDIT_NOTE':\r\n      const editNote = {\r\n        id: action.payload.id,\r\n        name: action.payload.name,\r\n        img: images.filter((img) => img.imgName === action.payload.category)[0]?.imgUrl || ' ',\r\n        creationDate: action.payload.date,\r\n        category: action.payload.category,\r\n        content: action.payload.content,\r\n        dates: findDates(action.payload.content),\r\n        archived: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        items: [\r\n          ...state.items.map((el) => {\r\n            if (el.id === editNote.id) {\r\n              return Object.assign(el, editNote);\r\n            } else {\r\n              return el;\r\n            }\r\n          }),\r\n        ],\r\n      };\r\n    case 'ARCHIVE_NOTE':\r\n      return {\r\n        ...state,\r\n        items: [...state.items.map((el) => (el.id === action.id ? { ...el, archived: true } : el))],\r\n      };\r\n    case 'UNARCHIVE_NOTE':\r\n      return {\r\n        ...state,\r\n        items: [\r\n          ...state.items.map((el) => (el.id === action.id ? { ...el, archived: false } : el)),\r\n        ],\r\n      };\r\n    case 'DELETE_NOTE':\r\n      return {\r\n        ...state,\r\n        items: [...state.items.filter((el) => el.id !== action.id)],\r\n      };\r\n    case 'DELETE_ALL_NOTES':\r\n      return {\r\n        ...state,\r\n        items: [],\r\n      };\r\n    case 'ARCHIVE_ALL_NOTES':\r\n      return {\r\n        ...state,\r\n        items: [...state.items.map((el) => ({ ...el, archived: true }))],\r\n      };\r\n    case 'CALCULATE':\r\n      return {\r\n        ...state,\r\n        task: calculate('Task', state),\r\n        thought: calculate('Random Thought', state),\r\n        idea: calculate('Idea', state),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\n\r\nimport { notes } from './reducers/notes';\r\n\r\nconst store = createStore(\r\n  notes,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}